#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø–∞–º—è—Ç–∏
"""

import os
import sys
import time
import requests
import json
from typing import Dict, Any

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_memory_optimizations(base_url: str = "http://localhost:8000") -> None:
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø–∞–º—è—Ç–∏"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π –ø–∞–º—è—Ç–∏...")
    print(f"üì° –ë–∞–∑–æ–≤—ã–π URL: {base_url}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ...")
    try:
        response = requests.get(f"{base_url}/memory", timeout=10)
        if response.status_code == 200:
            data = response.json()
            memory_mb = data["memory"]["rss_mb"]
            model_loaded = data["model"]["status"] == "loaded"
            
            print(f"   üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: {memory_mb:.1f}MB")
            print(f"   ü§ñ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {model_loaded}")
            
            if not model_loaded and memory_mb < 200:
                print("   ‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ú–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø–∞–º—è—Ç—å –≤ –Ω–æ—Ä–º–µ")
            elif model_loaded:
                print("   ‚ö†Ô∏è  –ú–æ–¥–µ–ª—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ")
            else:
                print("   ‚ö†Ô∏è  –í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...")
    try:
        response = requests.get(f"{base_url}/health", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"   üè• –°—Ç–∞—Ç—É—Å: {data['status']}")
            print(f"   üîó Supabase: {data['supabase_connected']}")
            print(f"   ü§ñ –ú–æ–¥–µ–ª—å: {data['model_loaded']}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    print("\n3Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
    try:
        response = requests.post(f"{base_url}/model/load", timeout=30)
        if response.status_code == 200:
            data = response.json()
            print(f"   üì• {data['message']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            time.sleep(1)
            response = requests.get(f"{base_url}/memory", timeout=10)
            if response.status_code == 200:
                data = response.json()
                memory_mb = data["memory"]["rss_mb"]
                print(f"   üíæ –ü–∞–º—è—Ç—å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏: {memory_mb:.1f}MB")
                
                if memory_mb > 200:
                    print("   ‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ –ø–∞–º—è—Ç—å")
                else:
                    print("   ‚ö†Ô∏è  –ù–∏–∑–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –í—ã–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    print("\n4Ô∏è‚É£ –í—ã–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...")
    try:
        response = requests.post(f"{base_url}/model/unload", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"   üì§ {data['message']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏
            time.sleep(1)
            response = requests.get(f"{base_url}/memory", timeout=10)
            if response.status_code == 200:
                data = response.json()
                memory_mb = data["memory"]["rss_mb"]
                model_loaded = data["model"]["status"] == "loaded"
                
                print(f"   üíæ –ü–∞–º—è—Ç—å –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏: {memory_mb:.1f}MB")
                print(f"   ü§ñ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {model_loaded}")
                
                if not model_loaded:
                    print("   ‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω–∞")
                else:
                    print("   ‚ö†Ô∏è  –ú–æ–¥–µ–ª—å –≤—Å–µ –µ—â–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    base_url = os.getenv("TEST_BASE_URL", "http://localhost:8000")
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏")
    print("=" * 50)
    
    test_memory_optimizations(base_url)
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python main.py")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è LAZY_LOADING –∏ ENVIRONMENT")
    print("3. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ENVIRONMENT=production")

if __name__ == "__main__":
    main()
